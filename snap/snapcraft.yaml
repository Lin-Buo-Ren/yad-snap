%YAML 1.1
---
# Snapcraft Recipe for Yet Another Dialog
# ------------------------------
# This file is in the YAML data serialization format:
# http://yaml.org
# For the spec. of writing this file refer the following documentation:
# * Snapcraft.yaml reference
#   https://forum.snapcraft.io/t/snapcraft-yaml-reference/4276
# * The snapcraft syntax
#   https://docs.snapcraft.io/build-snaps/syntax
# * Snap Docs
#   https://snapdocs.labix.org
# * Latest doc topics in the Snapcraft Forum
#   https://forum.snapcraft.io/c/doc
# For support refer to the snapcraft section in the Snapcraft Forum:
# https://forum.snapcraft.io/c/snapcraft

name: yad-brlin
summary: Display GTK+ dialog boxes from command line or shell scripts
description: |
  Program allows you to display GTK+ dialog boxes from command line or shell scripts. YAD depends on GTK+ only. Minimal GTK+ version is 2.16.0

  This software is licensed under the GPL v.3

  Project homepage: https://sourceforge.net/projects/yad-dialog/
  Example usage: https://sourceforge.net/p/yad-dialog/wiki/browse_pages/
  Mailing list: http://groups.google.com/group/yad-common

  THIS IS NOT AN OFFICIAL DISTRIBUTION!  For any issues regarding using this snap refer to the issue tracker:
  https://github.com/Lin-Buo-Ren/yad-snap/issues

version: determined-by-version-script
version-script: ./snap/local/utilities/set-snap-version.bash
confinement: devmode
grade: devel
icon: snap/gui/yad.png

# Apps that are exposed by the snap package
# If the _app_name_ is identical with the _snap_name_ it can be directly run
# with `_snap_name_` or `snap run _snap_name_` commands, otherwise it can only be run
# via `_snap_name_._app_name_` or `snap run _snap_name_._app_name_`
apps:
  yad:
    command: >
      desktop-launch
      yad-launch
      yad
  yad-icon-browser:
    command: >
      desktop-launch
      yad-launch
      yad-icon-browser

# Refer the following documentation for asserting interface plugs and slots in a security confined snap:
# Interfaces - doc - snapcraft.io
# https://forum.snapcraft.io/t/interfaces/6154
# Non-A/C: Non-autoconnect interface
plugs:
  # For snaps with a graphical user interface:
  desktop:
  desktop-legacy:
  x11:
  unity7:
  wayland:

  # Storage access
  #home:
  #removable-media: # Non-A/C

# Run `snapcraft help sources` for supported keywords on pulling a part's source ingredients
# Run `snapcraft plugins` for supported build helper plugins
# Run `snapcraft help plugins` for supported keywords on building a part
# For `override-*` scriptlets used to modify behavior of certain part's lifecycle phase, check out:
# https://forum.snapcraft.io/t/scriptlets/4892
parts:
  # Assets from the snap packaging, refer each READMEs under the `snap` folder for more information
  assets:
    source: snap/local
    plugin: dump

    override-build: ./utilities/install-assets.bash

    prime:
    - -utilities
    - -patches

  # Remote part for support of various desktop technologies
  # Refer: https://github.com/ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml
  desktop-gtk3: # for yad
    after:
    - ccache

  # This remote part if included in the snap will generate 'parts_meta_info' file in the snaps root directory containing information about the revisions used in each part of the snap.
  parts-meta-info:

  # The glib library, required by gtk3 part, shipped by Ubuntu 16.04 is too old(2.48.2), replace it with a new release from upstream
  glib:
    after:
    - ccache

    source: https://gitlab.gnome.org/GNOME/glib.git
    source-tag: 2.58.1
    source-depth: 1
    plugin: autotools
    build-packages:
    - autoconf
    - build-essential
    - gtk-doc-tools
    - libmount-dev
    filesets:
      bash-completion:
      - share/bash-completion
      gdb-support:
      - share/gdb
      gettext-support:
      - share/gettext
      glib-2.0:
      - share/glib-2.0
      executables:
      - bin
      library-headers:
      - include
      - lib/glib-2.0/include
      library-libtool:
      - lib/*.la
      library-pkgconfig:
      - lib/pkgconfig
      library-shared:
      - lib/*.so*
      localization:
      - share/locale
      m4-macros:
      - share/aclocal/*.m4
    stage:
    - $executables
    - $glib-2.0
    - $library-headers
    - $library-pkgconfig
    - $library-shared
    - $localization
    - $m4-macros
    prime:
    - $library-shared
    - $localization

  # The pango library, required by gtk3 part, shipped by Ubuntu 16.04 is too old(1.38.1), replace it with a new release from upstream
  pango:
    after:
    - ccache
    - glib
    - harfbuzz

    source: https://gitlab.gnome.org/GNOME/pango.git
    source-tag: 1.42.4
    source-depth: 1
    plugin: autotools
    build-packages:
    - autoconf
    - build-essential
    - gtk-doc-tools
    - libfribidi-dev
    # Replaced by harfbuzz part
    # libharfbuzz-dev
    stage-packages:
    - libfribidi0
    - libxft2

  # The harfbuzz library, required by pango part, shipped by Ubuntu 16.04 is too old(1.0.1), replace it with a new release from upstream
  harfbuzz:
    after:
    - ccache
    - glib

    source: git://anongit.freedesktop.org/harfbuzz
    source-tag: 2.1.3
    source-depth: 1

    override-pull: |
      set -o errexit

      snapcraftctl pull

      # Disable tests building
      sed \
        --in-place \
        '/^SUBDIRS = /s/ test//' \
        Makefile.am

    plugin: autotools
    build-packages:
    - autoconf
    - build-essential
    - gtk-doc-tools
    - libfreetype6-dev
    # Replaced by glib part
    #- libglib2.0-dev
    - libcairo2-dev
    - libtool
    - ragel

    filesets:
      executables:
      - bin
      library-cmake:
      - lib/cmake
      library-headers:
      - include
      library-libtool:
      - lib/*.la
      library-shared:
      - lib/*.so*
      library-pkgconfig:
      - lib/pkgconfig

    stage:
    - $library-cmake
    - $library-headers
    - $library-libtool
    - $library-shared
    - $library-pkgconfig

    override-stage: |
      set -o errexit

      snapcraftctl stage

      # Fix-up wrong libdir and includedir in pkgconfig
      sed \
        --in-place \
        --expression='s#^libdir=#libdir=${prefix}#g' \
        --expression='s#^includedir=#includedir=${prefix}#g' \
        "${SNAPCRAFT_STAGE}"/lib/pkgconfig/harfbuzz*.pc

    prime:
    - $library-shared

  # The meson build system shipped by Ubuntu 16.04 is too old(0.29.0), replace it with a new release from upstream
  meson:
    source: https://github.com/mesonbuild/meson.git
    source-tag: 0.48.2
    source-depth: 1
    plugin: python
    build-packages:
    - python3-minimal
    - ninja-build
    prime:
    - -*

  # The epoxy library shipped by Ubuntu 16.04 is too old(1.3.1), replace it with a new release from upstream
  epoxy:
    after:
    - ccache
    - meson

    source: https://github.com/anholt/libepoxy.git
    source-tag: 1.5.2
    source-depth: 1
    plugin: meson
    meson-parameters:
    - --prefix
    - /
    - --libdir
    - lib
    - -Dtests=false
    - -Dx11=true
    build-packages:
    - build-essential
    - libegl1-mesa-dev
    - libgl1-mesa-dev
    - libgles2-mesa-dev
    #organize:
      # Workaround LP: #1796802 “PKG_CONFIG_PATH during build step should include multiarch paths” : Bugs : Snapcraft
      #lib/*/pkgconfig/*: lib/pkgconfig/
      #usr/local: /
    #override-stage: |
      #set -o errexit
      #snapcraftctl stage

      # Fix-up wrong prefix in pkgconfig
      #sed \
        #--in-place \
        #'/^prefix=/s#/usr/local$##' \
        #lib/pkgconfig/epoxy.pc

  # The Gtk3 library shipped by Ubuntu 16.04 is too old(3.18.9), replace it with a new release from upstream
  # https://developer.gnome.org/gtk3/stable/gtk-building.html#dependencies
  gtk3:
    after:
    - ccache
    - epoxy
    - glib
    - pango

    source: https://gitlab.gnome.org/GNOME/gtk.git
    source-tag: 3.24.1
    source-depth: 1
    plugin: autotools
    configflags:
    - --disable-dependency-tracking
    - --disable-glibtest
    - --disable-gtk-doc-html
    # DISABLED: Not quite compatible with snapd for now
    #- --enable-wayland-backend
    - --enable-broadway-backend
    - --enable-x11-backend
    build-packages:
    - autoconf
    - build-essential
    #- gtk-doc-tools
    - libgirepository1.0-dev
    # Replaced by epoxy part
    #- libepoxy-dev
    # Replaced by glib part
    #- libglib2.0-dev
    # Replaced by pango part
    #- libpango1.0-dev
    - libxml2-utils
    - pkg-config
    # DISABLED: Not quite compatible with snapd for now
    # - wayland-protocols
    filesets:
      configurations:
      - etc
      desktop-entries:
      - share/applications
      executables:
      - bin
      icons:
      - share/icons
      library-headers:
      - include
      library-girepository:
      - lib/girepository-1.0
      library-libtool:
      - lib/**.la*
      library-pkgconfig:
      - lib/pkgconfig
      library-shared:
      - lib/**.so*
      localization:
      - share/locale
      manpages:
      - share/man
      m4-macros:
      - share/aclocal/*.m4
      support-gettext:
      - share/gettext
      support-gir:
      - share/gir-*
      support-glib:
      - share/glib-*
      support-gtk:
      - share/gtk-*
      themes:
      - share/themes
    override-stage: |
      set -o errexit

      snapcraftctl stage

      # Fix-up missing library linking dependency:
      # stage/lib/libgdk-3.so: undefined reference to `epoxy_has_glx'
      sed \
        --in-place \
        --regexp-extended \
        '/^Libs:/s/(-lgdk-3)/\1 -lepoxy/' \
        lib/pkgconfig/gdk-3.0.pc

      # stage/lib/libgtk-3.so: undefined reference to `hb_font_get_nominal_glyph'
      sed \
        --in-place \
        --regexp-extended \
        '/^Libs:/s/(-lgtk-3)/\1 -lharfbuzz/' \
        lib/pkgconfig/gtk+-3.0.pc

    prime:
    - $library-shared
    - $localization

  # BuildingGtk – WebKit
  # https://trac.webkit.org/wiki/BuildingGtk
  #webkitgtk:
    #after:
    # ccache breaks when "[ 52%] Generate bindings (WebCoreBindings)"
    # /usr/bin/ccache: invalid option -- 'E'
    #- ccache
    #- gcc-6

    #source: https://webkitgtk.org/releases/webkitgtk-2.22.2.tar.xz
    #plugin: cmake
    # REPLACED: CC, CXX environment variable not customizable via this, wait for the incoming `build-environment` key support at snapcraft 3.0
    #configflags:
    #- -DPORT=GTK
    #- -DCMAKE_BUILD_TYPE=RelWithDebInfo

    # Refer to https://github.com/WebKit/webkit/blob/master/Tools/gtk/install-dependencies
    #build-packages:
    #- geoclue-2.0
    #- gperf
    #- libgcrypt20-dev
    #- libgstreamer-plugins-base1.0-dev
    #- libhyphen-dev
    #- libjpeg-turbo8-dev
    #- libnotify-dev
    #- libsecret-1-dev
    #- libsoup2.4-dev
    #- libsqlite3-dev
    ## DISABLED: Build without Web Crypto API(ENABLE_SUBTLE_CRYPTO) support
    ##- libtasn1-6-dev
    #- libwebp-dev
    #- libxslt1-dev
    #- libxt-dev
    #- ruby-all-dev
    #override-build: |
      #set -eu

      # According to https://github.com/snapcore/snapcraft/blob/42c7820/snapcraft/plugins/cmake.py#L68-L79 it seems that the cmake plugin doesn't copy the sourcetree to the builddir, imitate its behavior and use the srcdir directly
      # ENABLE_PLUGIN_PROCESS_GTK2: We use Gtk3
      # ENABLE_SUBTLE_CRYPTO: Requires newer libgcrypt version that is not available in Ubuntu 16.04, also the functionaility is not essential
      # USE_GSTREAMER_GL: Requires Gstreamer 1.10 that is not available in Ubuntu 16.04
      # USE_WOFF2: WOFF2Dec isn't available in Ubuntu 16.04
      # Refer: cmake/OptionsGTK.cmake
      #env \
        #CC=/usr/bin/gcc-6 \
        #CXX=/usr/bin/g++-6 \
        #cmake \
        #-D CMAKE_BUILD_TYPE=RelWithDebInfo \
        #-D CMAKE_INSTALL_PREFIX= \
        #-D ENABLE_SUBTLE_CRYPTO=false \
        #-D ENABLE_PLUGIN_PROCESS_GTK2=false \
        #-D ENABLE_WAYLAND_TARGET=false \
        #-D USE_GSTREAMER_GL=false \
        #-D USE_WOFF2=false \
        #-D PORT=GTK \
        #-G Ninja \
        #"${SNAPCRAFT_PART_SRC}"

      #env \
        #DESTDIR="${SNAPCRAFT_PART_INSTALL}" \
        #ninja -j "$(nproc)" install
    #filesets:
      #executables:
      #- bin
      #- libexec
      #library-girepository:
      #- lib/girepository-1.0
      #library-headers:
      #- include
      #library-pkgconfig:
      #- lib/pkgconfig
      #library-shared:
      #- lib/**.so*
      #resource-gir:
      #- share/gir-1.0
      #resource-localization:
      #- share/locale
    #stage:
    #- $executables
    ##- $library-girepository
    #- $library-headers
    #- $library-pkgconfig
    #- $library-shared
    ##- $resource-gir
    #- $resource-localization
    #override-stage: |
      #set -o errexit

      #snapcraftctl stage

      # Fix-up missing library linking dependency:
      # stage/lib/libwebkit2gtk-4.0.so: undefined reference to `hb_ot_math_has_data'
      #sed \
        #--in-place \
        #--regexp-extended \
        #'/^Libs:/s/(-lwebkit2gtk-4.0)/\1 -lharfbuzz/' \
        #lib/pkgconfig/webkit2gtk-4.0.pc

    #prime:
    #- $executables
    #- $library-shared
    #- $resource-localization

  # This pseudo part setups Compiler cache(ccache) to the stage dir.
  #
  # To use it simply add a dependency to this part.
  ccache:

  # This pseudo part setups version 6 of GCC, which is not available
  # in Ubuntu 16.04 software source.
  # DISABLED: Depended by WebkitGtk, which is disabled for now.
  #gcc-6:
    #plugin: nil
    #override-pull: 'true'
    #override-build: |
      #sudo apt --yes install software-properties-common
      ## Install newer GCC from Toolchain test builds PPA
      #sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
      #sudo apt update
      #sudo apt --yes install cpp-6 gcc-6 g++-6
    #filesets:
      #executables:
        #- bin/*
    #stage:
      #- $executables
    #override-prime: 'true'

  yad:
    after:
    - ccache
    - gtk3
    # DISABLED: Refer https://github.com/Lin-Buo-Ren/yad-snap/issues/2 for more info
    #- webkitgtk

    source: https://github.com/v1cont/yad.git
    source-depth: 1

    # For stable release build
    #source-tag: v0.40.3

    plugin: autotools
    build-packages:
    - intltool
    # Replaced by gtk3 part
    #- libgtk-3-dev
    - libgtksourceview-3.0-dev
    - libgtkspell3-3-dev
    # REPLACED: Ubuntu build depends on wayland, which is not quite compatible with snapd for now
    #- libwebkit2gtk-4.0-dev
    stage-packages:
    # Replaced by gtk3 part
    #- libgtk-3-0
    - libgtksourceview-3.0-1
    - libgtkspell3-3-0
    # REPLACED: Ubuntu build depends on wayland, which is not quite compatible with snapd for now
    #- libwebkit2gtk-4.0-37
    # For /etc/X11/rgb.txt
    - x11-common
    configflags:
    - --enable-gio
    #- --enable-html
    - --enable-icon-browser
    - --enable-spell
    - --enable-sourceview
    - --with-gtk=gtk3
    - --with-rgb=/snap/$SNAPCRAFT_PROJECT_NAME/current/etc/X11/rgb.txt
    override-build: |
      set \
        -o errexit

      # Refer https://github.com/v1cont/yad#building-git-version
      autoreconf -ivf
      intltoolize

      snapcraftctl build

    filesets:
      executables:
      - bin
      etc:
      - etc
      library-shared:
      - lib/**.so*
      resource-autoconf:
      - share/aclocal
      resource-desktop-entry:
      - share/applications
      resource-icons:
      - share/icons
      resource-localization:
      - share/locale
      resource-manpages:
      - share/man
      usr:
      - usr
    stage:
    - $executables
    - $library-shared
    - $resource-desktop-entry
    - $resource-icons
    - $resource-localization
    - $resource-manpages
    - $usr
    prime:
    - $executables
    - $library-shared
    - $resource-desktop-entry
    - $resource-icons
    - $resource-localization
    - $resource-manpages
    - $usr
